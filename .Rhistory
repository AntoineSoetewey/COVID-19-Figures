axis.text.x.top = element_text(color = "darkgray"),
strip.text = element_text(size = 14),
strip.placement = "outside",
plot.margin = unit(c(5.5, 5.5, 20, 5.5), "points")
)
fig_trends3
ggsave("fig_trends3.png")
# fig with gridlines
# (opts() is deprecated, use theme())
fig_trends4 <- fig_trends3 +
theme(
panel.grid.major = element_line(linetype = c("28")),
panel.grid.minor = element_line(linetype = c("28"))
)
fig_trends4
ggsave("fig_trends4.png")
fig_trends5 <- fig_trends3 +
theme(axis.line = element_line(size = 3, colour = "grey80"))
fig_trends5
fig_trends5 <- fig_trends3 +
theme(axis.line.y = element_line(size = 3, colour = "grey80"))
fig_trends5
fig_trends5 <- fig_trends3 +
theme(axis.line.y = element_line())
fig_trends5
fig_trends3
fig_trends5 <- fig_trends3 +
theme(axis.line.y = element_line())
fig_trends5
ggsave("fig_trends5.png")
# Create Belgian plot only
fig_trends3 <- ggplot(
subdat,
aes(x = DATE, y = NEW_IN_divid)
) +
geom_point(
size = 1L,
colour = "steelblue",
alpha=0.35
) +
labs(x = "", y = "Nombre d'hospitalisations (par 100,000 habitants)",
title = "Evolution du nombre d'hospitalisations en Belgique - COVID-19") +
# theme_minimal() +
theme_economist() + scale_color_economist() +
geom_smooth(
se = FALSE,
col = "steelblue",
method = "gam",
formula = y ~ s(x)
) +
# labs(
#   title = "Evolution des admissions hospitalières en Belgique - COVID-19"
#   # ,
#   # subtitle = paste0(format(as.Date(period), "%B %d"), " to ", format(max(dat$DATE), "%B %d"), " (en bleu) vs. ", format(min(dat$DATE), "%B %d"), " to ", format(period2, "%B %d"), " (en gris)")
# ) +
scale_y_continuous(
breaks = seq(from = 0, to = max(subdat$NEW_IN_divid), by = 2),
limits = c(0, max(subdat$NEW_IN_divid))
) +
scale_x_date(
labels = date_format("%d/%m"),
# date_breaks = "2 weeks",
breaks = break.vec,
# sec.axis = sec_axis(~ . - time_diff,
#                     labels = date_format("%d/%m"),
#                     breaks = break.vec - time_diff
# )
) +
geom_hline(
yintercept = 75*100000/11431406, linetype = "dashed",
color = "red", size = 0.8
) +
geom_text(aes(x = as.Date("2020-10-25"), y = 75*100000/11431406+0.2, label = "Niveau de 75 hospitalisations/jour"),
colour = "red", angle = 0, size = 5
) +
geom_vline(
xintercept = as.Date("2020-10-6"), linetype = "dashed",
color = "darkgray", size = 0.8
) +
geom_text(aes(x = as.Date("2020-10-6"), y = 5, label = "6/10 : comité de concertation : mesures plus strictes"),
colour = "darkgray", angle = 90, vjust = -0.5, size = 5
) +
theme(
axis.title = element_text(size = 16),
plot.title = element_text(size = 18, face = "bold"),
axis.text = element_text(size = 16),
axis.text.x = element_text(colour = "steelblue"),
axis.text.x.top = element_text(color = "darkgray"),
strip.text = element_text(size = 14),
strip.placement = "outside"
)
fig_trends3
ggsave("fig_trends3.png")
# fig with gridlines
# (opts() is deprecated, use theme())
fig_trends4 <- fig_trends3 +
theme(
panel.grid.major = element_line(linetype = c("28")),
panel.grid.minor = element_line(linetype = c("28"))
)
fig_trends4
ggsave("fig_trends4.png")
fig_trends5 <- fig_trends3 +
theme(axis.line.y = element_line())
fig_trends5
ggsave("fig_trends5.png")
# Create Belgian plot only
fig_trends3 <- ggplot(
subdat,
aes(x = DATE, y = NEW_IN_divid)
) +
geom_point(
size = 1L,
colour = "steelblue",
alpha=0.35
) +
labs(x = "", y = "Nombre d'hospitalisations (par 100,000 habitants)",
title = "Evolution du nombre d'hospitalisations en Belgique - COVID-19") +
# theme_minimal() +
theme_economist() + scale_color_economist() +
geom_smooth(
se = FALSE,
col = "steelblue",
method = "gam",
formula = y ~ s(x)
) +
# labs(
#   title = "Evolution des admissions hospitalières en Belgique - COVID-19"
#   # ,
#   # subtitle = paste0(format(as.Date(period), "%B %d"), " to ", format(max(dat$DATE), "%B %d"), " (en bleu) vs. ", format(min(dat$DATE), "%B %d"), " to ", format(period2, "%B %d"), " (en gris)")
# ) +
scale_y_continuous(
breaks = seq(from = 0, to = max(subdat$NEW_IN_divid), by = 2),
limits = c(0, max(subdat$NEW_IN_divid))
) +
scale_x_date(
labels = date_format("%d/%m"),
# date_breaks = "2 weeks",
breaks = break.vec,
# sec.axis = sec_axis(~ . - time_diff,
#                     labels = date_format("%d/%m"),
#                     breaks = break.vec - time_diff
# )
) +
geom_hline(
yintercept = 75*100000/11431406, linetype = "dashed",
color = "red", size = 0.8
) +
geom_text(aes(x = as.Date("2020-10-25"), y = 75*100000/11431406+0.2, label = "Niveau de 75 hospitalisations/jour"),
colour = "red", angle = 0, size = 5
) +
geom_vline(
xintercept = as.Date("2020-10-6"), linetype = "dashed",
color = "darkgray", size = 0.8
) +
geom_text(aes(x = as.Date("2020-10-6"), y = 5, label = "6/10 : comité de concertation : mesures plus strictes"),
colour = "darkgray", angle = 90, vjust = -0.5, size = 5
) +
theme(
axis.title = element_text(size = 16),
plot.title = element_text(size = 18, face = "bold"),
axis.text = element_text(size = 16),
axis.text.x = element_text(colour = "steelblue"),
axis.text.x.top = element_text(color = "darkgray"),
strip.text = element_text(size = 14),
strip.placement = "outside"
)
fig_trends3
ggsave("fig_trends3.png")
# fig with gridlines
# (opts() is deprecated, use theme())
fig_trends4 <- fig_trends3 +
theme(
panel.grid.major = element_line(linetype = c("28")),
panel.grid.minor = element_line(linetype = c("28"))
)
fig_trends4
ggsave("fig_trends4.png")
fig_trends5 <- fig_trends3 +
theme(axis.line.y = element_line())
fig_trends5
ggsave("fig_trends5.png")
mapBelgium<- tm_shape(map, unit = "km") +
tm_borders(lwd = 2, col ="gray")+
tm_layout(frame=F)
tmap_save(mapBelgium,units="cm", height = 12,  width = 25.4,  filename="map.png", dpi=300)
library(png)
img1 <- readPNG("fig_trends3.png")
img2 <- readPNG("map.png")
img1 = abind::abind(img1, img1[,,1]) # add an alpha channel
img2 = abind::abind(img2, img2[,,1]) # add an alpha channel
# Make semi-transparent
img1[,,4] <- 1
img2[,,4] <- 0.2
library(graphics)
png('fig_trends3_map.png', width = 25.71428 * 360, height = 12 * 360, units = "px", res=300)
par(mar = c(0,0,0,0), xaxs="i", yaxs="i")
plot.new()
rasterImage(img1, 0, 0, 1, 1)
rasterImage(img2, 0, 0, 1, 1)
dev.off()
mapBelgium<- tm_shape(map, unit = "km") +
tm_borders(lwd = 2, col ="gray")+
tm_layout(frame=F)
tmap_save(mapBelgium,units="cm", height = 12,  width = 25.4,  filename="map.png", dpi=300)
library(png)
img1 <- readPNG("fig_trends3.png")
img2 <- readPNG("map.png")
# Load downloaded images and add alpha channel
img1 = abind::abind(img1, img1[,,1]) # add an alpha channel
img2 = abind::abind(img2, img2[,,1]) # add an alpha channel
# Make semi-transparent
img1[,,4] <- 1
img2[,,4] <- 0.2
# Create output image
library(graphics)
png('fig_trends3_map.png', width = 25.71428 * 360, height = 12 * 360, units = "px", res=300)
par(mar = c(0,0,0,0), xaxs="i", yaxs="i")
plot.new()
rasterImage(img1, 0, 0, 1, 1)
rasterImage(img2, 0, 0, 1, 1)
dev.off()
# Create Belgian plot only
fig_trends3 <- ggplot(
subdat,
aes(x = DATE, y = NEW_IN_divid)
) +
geom_point(
size = 1.5L,
colour = "steelblue",
alpha=0.35
) +
labs(x = "", y = "Nombre d'hospitalisations (par 100,000 habitants)",
title = "Evolution du nombre d'hospitalisations en Belgique - COVID-19") +
# theme_minimal() +
theme_economist() + scale_color_economist() +
geom_smooth(
se = FALSE,
col = "steelblue",
method = "gam",
formula = y ~ s(x)
) +
# labs(
#   title = "Evolution des admissions hospitalières en Belgique - COVID-19"
#   # ,
#   # subtitle = paste0(format(as.Date(period), "%B %d"), " to ", format(max(dat$DATE), "%B %d"), " (en bleu) vs. ", format(min(dat$DATE), "%B %d"), " to ", format(period2, "%B %d"), " (en gris)")
# ) +
scale_y_continuous(
breaks = seq(from = 0, to = max(subdat$NEW_IN_divid), by = 2),
limits = c(0, max(subdat$NEW_IN_divid))
) +
scale_x_date(
labels = date_format("%d/%m"),
# date_breaks = "2 weeks",
breaks = break.vec,
# sec.axis = sec_axis(~ . - time_diff,
#                     labels = date_format("%d/%m"),
#                     breaks = break.vec - time_diff
# )
) +
geom_hline(
yintercept = 75*100000/11431406, linetype = "dashed",
color = "red", size = 0.8
) +
geom_text(aes(x = as.Date("2020-10-25"), y = 75*100000/11431406+0.2, label = "Niveau de 75 hospitalisations/jour"),
colour = "red", angle = 0, size = 5
) +
geom_vline(
xintercept = as.Date("2020-10-6"), linetype = "dashed",
color = "darkgray", size = 0.8
) +
geom_text(aes(x = as.Date("2020-10-6"), y = 5, label = "6/10 : comité de concertation : mesures plus strictes"),
colour = "darkgray", angle = 90, vjust = -0.5, size = 5
) +
theme(
axis.title = element_text(size = 16),
plot.title = element_text(size = 18, face = "bold"),
axis.text = element_text(size = 16),
axis.text.x = element_text(colour = "steelblue"),
axis.text.x.top = element_text(color = "darkgray"),
strip.text = element_text(size = 14),
strip.placement = "outside"
)
fig_trends3
ggsave("fig_trends3.png")
fig_trends3 <- ggplot(
subdat,
aes(x = DATE, y = NEW_IN_divid)
) +
geom_point(
size = 1.5L,
colour = "steelblue",
alpha=0.35
) +
labs(x = "", y = "Nombre d'hospitalisations (par 100,000 habitants)",
title = "Evolution du nombre d'hospitalisations en Belgique - COVID-19") +
# theme_minimal() +
theme_economist() + scale_color_economist() +
geom_smooth(
se = FALSE,
col = "steelblue",
method = "gam",
formula = y ~ s(x)
) +
# labs(
#   title = "Evolution des admissions hospitalières en Belgique - COVID-19"
#   # ,
#   # subtitle = paste0(format(as.Date(period), "%B %d"), " to ", format(max(dat$DATE), "%B %d"), " (en bleu) vs. ", format(min(dat$DATE), "%B %d"), " to ", format(period2, "%B %d"), " (en gris)")
# ) +
scale_y_continuous(
breaks = seq(from = 0, to = max(subdat$NEW_IN_divid), by = 2),
limits = c(0, max(subdat$NEW_IN_divid))
) +
scale_x_date(
labels = date_format("%d/%m"),
# date_breaks = "2 weeks",
breaks = break.vec,
# sec.axis = sec_axis(~ . - time_diff,
#                     labels = date_format("%d/%m"),
#                     breaks = break.vec - time_diff
# )
) +
geom_hline(
yintercept = 75*100000/11431406, linetype = "dashed",
color = "red", size = 0.8
) +
geom_text(aes(x = as.Date("2020-10-25"), y = 75*100000/11431406+0.2, label = "Niveau de 75 hospitalisations/jour"),
colour = "red", angle = 0, size = 5
) +
geom_vline(
xintercept = as.Date("2020-10-6"), linetype = "dashed",
color = "darkgray", size = 0.8
) +
geom_text(aes(x = as.Date("2020-10-6"), y = 5, label = "6/10 : comité de concertation : mesures plus strictes"),
colour = "darkgray", angle = 90, vjust = -0.5, size = 5
) +
theme(
axis.title = element_text(size = 16),
plot.title = element_text(size = 18, face = "bold"),
axis.text = element_text(size = 16),
axis.text.x = element_text(colour = "steelblue"),
axis.text.x.top = element_text(color = "darkgray"),
strip.text = element_text(size = 14),
strip.placement = "outside"
)
fig_trends3
ggsave("fig_trends3.png")
# fig with gridlines
# (opts() is deprecated, use theme())
fig_trends4 <- fig_trends3 +
theme(
panel.grid.major = element_line(linetype = c("28")),
panel.grid.minor = element_line(linetype = c("28"))
)
fig_trends4
ggsave("fig_trends4.png")
fig_trends5 <- fig_trends3 +
theme(axis.line.y = element_line())
fig_trends5
ggsave("fig_trends5.png")
# Create Belgian plot only
fig_trends3 <- ggplot(
subdat,
aes(x = DATE, y = NEW_IN_divid)
) +
geom_point(
size = 2L,
colour = "steelblue",
alpha=0.35
) +
labs(x = "", y = "Nombre d'hospitalisations (par 100,000 habitants)",
title = "Evolution du nombre d'hospitalisations en Belgique - COVID-19") +
# theme_minimal() +
theme_economist() + scale_color_economist() +
geom_smooth(
se = FALSE,
col = "steelblue",
method = "gam",
formula = y ~ s(x)
) +
# labs(
#   title = "Evolution des admissions hospitalières en Belgique - COVID-19"
#   # ,
#   # subtitle = paste0(format(as.Date(period), "%B %d"), " to ", format(max(dat$DATE), "%B %d"), " (en bleu) vs. ", format(min(dat$DATE), "%B %d"), " to ", format(period2, "%B %d"), " (en gris)")
# ) +
scale_y_continuous(
breaks = seq(from = 0, to = max(subdat$NEW_IN_divid), by = 2),
limits = c(0, max(subdat$NEW_IN_divid))
) +
scale_x_date(
labels = date_format("%d/%m"),
# date_breaks = "2 weeks",
breaks = break.vec,
# sec.axis = sec_axis(~ . - time_diff,
#                     labels = date_format("%d/%m"),
#                     breaks = break.vec - time_diff
# )
) +
geom_hline(
yintercept = 75*100000/11431406, linetype = "dashed",
color = "red", size = 0.8
) +
geom_text(aes(x = as.Date("2020-10-25"), y = 75*100000/11431406+0.2, label = "Niveau de 75 hospitalisations/jour"),
colour = "red", angle = 0, size = 5
) +
geom_vline(
xintercept = as.Date("2020-10-6"), linetype = "dashed",
color = "darkgray", size = 0.8
) +
geom_text(aes(x = as.Date("2020-10-6"), y = 5, label = "6/10 : comité de concertation : mesures plus strictes"),
colour = "darkgray", angle = 90, vjust = -0.5, size = 5
) +
theme(
axis.title = element_text(size = 16),
plot.title = element_text(size = 18, face = "bold"),
axis.text = element_text(size = 16),
axis.text.x = element_text(colour = "steelblue"),
axis.text.x.top = element_text(color = "darkgray"),
strip.text = element_text(size = 14),
strip.placement = "outside"
)
fig_trends3
ggsave("fig_trends3.png")
# fig with gridlines
# (opts() is deprecated, use theme())
fig_trends4 <- fig_trends3 +
theme(
panel.grid.major = element_line(linetype = c("28")),
panel.grid.minor = element_line(linetype = c("28"))
)
fig_trends4
ggsave("fig_trends4.png")
fig_trends5 <- fig_trends3 +
theme(axis.line.y = element_line())
fig_trends5
ggsave("fig_trends5.png")
# Create Belgian plot only
fig_trends3 <- ggplot(
subdat,
aes(x = DATE, y = NEW_IN_divid)
) +
geom_point(
size = 2L,
colour = "steelblue",
alpha=0.35
) +
labs(x = "", y = "Nombre d'hospitalisations (par 100,000 habitants)",
title = "Evolution du nombre d'hospitalisations en Belgique - COVID-19") +
# theme_minimal() +
theme_economist() + scale_color_economist() +
geom_smooth(
se = FALSE,
col = "steelblue",
method = "gam",
formula = y ~ s(x)
) +
# labs(
#   title = "Evolution des admissions hospitalières en Belgique - COVID-19"
#   # ,
#   # subtitle = paste0(format(as.Date(period), "%B %d"), " to ", format(max(dat$DATE), "%B %d"), " (en bleu) vs. ", format(min(dat$DATE), "%B %d"), " to ", format(period2, "%B %d"), " (en gris)")
# ) +
scale_y_continuous(
breaks = seq(from = 0, to = max(subdat$NEW_IN_divid), by = 2),
limits = c(0, max(subdat$NEW_IN_divid))
) +
scale_x_date(
labels = date_format("%d/%m"),
# date_breaks = "2 weeks",
breaks = break.vec,
# sec.axis = sec_axis(~ . - time_diff,
#                     labels = date_format("%d/%m"),
#                     breaks = break.vec - time_diff
# )
) +
geom_hline(
yintercept = 75*100000/11431406, linetype = "dashed",
color = "red", size = 0.8
) +
geom_text(aes(x = as.Date("2020-10-30"), y = 75*100000/11431406+0.2, label = "Niveau de 75 hospitalisations/jour"),
colour = "red", angle = 0, size = 5
) +
geom_vline(
xintercept = as.Date("2020-10-6"), linetype = "dashed",
color = "darkgray", size = 0.8
) +
geom_text(aes(x = as.Date("2020-10-6"), y = 5, label = "6/10 : comité de concertation : mesures plus strictes"),
colour = "darkgray", angle = 90, vjust = -0.5, size = 5
) +
theme(
axis.title = element_text(size = 16),
plot.title = element_text(size = 18, face = "bold"),
axis.text = element_text(size = 16),
axis.text.x = element_text(colour = "steelblue"),
axis.text.x.top = element_text(color = "darkgray"),
strip.text = element_text(size = 14),
strip.placement = "outside"
)
fig_trends3
ggsave("fig_trends3.png")
# fig with gridlines
# (opts() is deprecated, use theme())
fig_trends4 <- fig_trends3 +
theme(
panel.grid.major = element_line(linetype = c("28")),
panel.grid.minor = element_line(linetype = c("28"))
)
fig_trends4
ggsave("fig_trends4.png")
fig_trends5 <- fig_trends3 +
theme(axis.line.y = element_line())
fig_trends5
ggsave("fig_trends5.png")

gif <-
ggplot(df) +
geom_bar(aes(as.factor(AGEGROUP), CASES, group = SEX, fill = SEX),
stat = "identity",
subset(df, SEX == "Women")
) +
geom_bar(aes(as.factor(AGEGROUP), -CASES, group = SEX, fill = SEX),
stat = "identity",
subset(df, SEX == "Men")
) +
coord_flip() +
theme_minimal() +
labs(
title = "COVID-19 cases by age group and sex in Belgium",
subtitle = "Rolling 7 days window: {closest_state}",
caption = "Niko Speybroeck (@NikoSpeybroeck), Antoine Soetewey (@statsandr) \n Data: https://epistat.wiv-isp.be/covid/",
x = "Age group",
y = "Number of cases per week") +
scale_y_continuous(
# limits = c(lower_limit, upper_limit),
breaks = seq(lower_limit, upper_limit, 1000),
labels = abs(seq(lower_limit, upper_limit, 1000))
) +
theme(
legend.position = c(.95, .15),
legend.justification = c("right", "top"),
legend.box.just = "right",
legend.margin = margin(6, 6, 6, 6),
legend.title = element_blank(),
plot.title = element_text(face = "bold"),
plot.subtitle = element_text(face = "bold")
)
# +
#   transition_states(DATE_RANGE, transition_length = 2, state_length = 0) +
#   # view_follow(fixed_x = TRUE) +
#   ease_aes("linear")
gif
ggplot(df) +
geom_bar(aes(as.factor(AGEGROUP), CASES, group = SEX, fill = SEX),
stat = "identity",
subset(df, SEX == "Women")
) +
geom_bar(aes(as.factor(AGEGROUP), -CASES, group = SEX, fill = SEX),
stat = "identity",
subset(df, SEX == "Men")
) +
coord_flip() +
theme_minimal() +
labs(
title = "COVID-19 cases by age group and sex in Belgium",
subtitle = "Rolling 7 days window: {closest_state}",
caption = "Niko Speybroeck (@NikoSpeybroeck), Antoine Soetewey (@statsandr) \n Data: https://epistat.wiv-isp.be/covid/",
x = "Age group",
y = "Number of cases per week") +
scale_y_continuous(
# limits = c(lower_limit, upper_limit),
breaks = seq(lower_limit, upper_limit, 1000),
labels = abs(seq(lower_limit, upper_limit, 1000))
) +
theme(
legend.position = c(.95, .15),
legend.justification = c("right", "top"),
legend.box.just = "right",
legend.margin = margin(6, 6, 6, 6),
legend.title = element_blank(),
plot.title = element_text(face = "bold"),
plot.subtitle = element_text(face = "bold")
)
gif <-
ggplot(df) +
geom_bar(aes(as.factor(AGEGROUP), CASES, group = SEX, fill = SEX),
stat = "identity",
subset(df, SEX == "Women")
) +
geom_bar(aes(as.factor(AGEGROUP), -CASES, group = SEX, fill = SEX),
stat = "identity",
subset(df, SEX == "Men")
) +
coord_flip() +
theme_minimal() +
labs(
title = "COVID-19 cases by age group and sex in Belgium",
subtitle = "Rolling 7 days window: {closest_state}",
caption = "Niko Speybroeck (@NikoSpeybroeck), Antoine Soetewey (@statsandr) \n Data: https://epistat.wiv-isp.be/covid/",
x = "Age group",
y = "Number of cases per week") +
scale_y_continuous(
# limits = c(lower_limit, upper_limit),
breaks = seq(lower_limit, upper_limit, 1000),
labels = abs(seq(lower_limit, upper_limit, 1000))
) +
theme(
legend.position = c(.95, .15),
legend.justification = c("right", "top"),
legend.box.just = "right",
legend.margin = margin(6, 6, 6, 6),
legend.title = element_blank(),
plot.title = element_text(face = "bold"),
plot.subtitle = element_text(face = "bold")
) +
geom_bar(aes(dat$AGEGROUP, dat$POPULATION, group = dat$SEX, fill = dat$SEX),
stat = "identity",
subset(dat, SEX == "Female")
) +
geom_bar(aes(dat$AGEGROUP, -dat$POPULATION, group = dat$SEX, fill = dat$SEX),
stat = "identity",
subset(dat, SEX == "Male")
)
+
transition_states(DATE_RANGE, transition_length = 2, state_length = 0) +
# view_follow(fixed_x = TRUE) +
ease_aes("linear")
gif
gif <-
ggplot(df) +
geom_bar(aes(as.factor(AGEGROUP), CASES, group = SEX, fill = SEX),
stat = "identity",
subset(df, SEX == "Women")
) +
geom_bar(aes(as.factor(AGEGROUP), -CASES, group = SEX, fill = SEX),
stat = "identity",
subset(df, SEX == "Men")
) +
coord_flip() +
theme_minimal() +
labs(
title = "COVID-19 cases by age group and sex in Belgium",
subtitle = "Rolling 7 days window: {closest_state}",
caption = "Niko Speybroeck (@NikoSpeybroeck), Antoine Soetewey (@statsandr) \n Data: https://epistat.wiv-isp.be/covid/",
x = "Age group",
y = "Number of cases per week") +
scale_y_continuous(
# limits = c(lower_limit, upper_limit),
breaks = seq(lower_limit, upper_limit, 1000),
labels = abs(seq(lower_limit, upper_limit, 1000))
) +
theme(
legend.position = c(.95, .15),
legend.justification = c("right", "top"),
legend.box.just = "right",
legend.margin = margin(6, 6, 6, 6),
legend.title = element_blank(),
plot.title = element_text(face = "bold"),
plot.subtitle = element_text(face = "bold")
) +
geom_bar(aes(dat$AGEGROUP, dat$POPULATION, group = dat$SEX, fill = dat$SEX),
stat = "identity",
subset(dat, SEX == "Female")
) +
geom_bar(aes(dat$AGEGROUP, -dat$POPULATION, group = dat$SEX, fill = dat$SEX),
stat = "identity",
subset(dat, SEX == "Male")
)
+ transition_states(DATE_RANGE, transition_length = 2, state_length = 0) +
# view_follow(fixed_x = TRUE) +
ease_aes("linear")
gif
gif <-
ggplot(df) +
geom_bar(aes(as.factor(AGEGROUP), CASES, group = SEX, fill = SEX),
stat = "identity",
subset(df, SEX == "Women")
) +
geom_bar(aes(as.factor(AGEGROUP), -CASES, group = SEX, fill = SEX),
stat = "identity",
subset(df, SEX == "Men")
) +
coord_flip() +
theme_minimal() +
labs(
title = "COVID-19 cases by age group and sex in Belgium",
subtitle = "Rolling 7 days window: {closest_state}",
caption = "Niko Speybroeck (@NikoSpeybroeck), Antoine Soetewey (@statsandr) \n Data: https://epistat.wiv-isp.be/covid/",
x = "Age group",
y = "Number of cases per week") +
scale_y_continuous(
# limits = c(lower_limit, upper_limit),
breaks = seq(lower_limit, upper_limit, 1000),
labels = abs(seq(lower_limit, upper_limit, 1000))
) +
theme(
legend.position = c(.95, .15),
legend.justification = c("right", "top"),
legend.box.just = "right",
legend.margin = margin(6, 6, 6, 6),
legend.title = element_blank(),
plot.title = element_text(face = "bold"),
plot.subtitle = element_text(face = "bold")
) +
geom_bar(aes(as.factor(AGEGROUP), POPULATION, group = SEX, fill = SEX),
stat = "identity",
subset(df, SEX == "Women")
) +
geom_bar(aes(as.factor(AGEGROUP), -POPULATION, group = SEX, fill = SEX),
stat = "identity",
subset(df, SEX == "Men")
) +
transition_states(DATE_RANGE, transition_length = 2, state_length = 0) +
# view_follow(fixed_x = TRUE) +
ease_aes("linear")
gif
gif <-
ggplot(df) +
geom_bar(aes(as.factor(AGEGROUP), CASES, group = SEX, fill = SEX),
stat = "identity",
subset(df, SEX == "Women")
) +
geom_bar(aes(as.factor(AGEGROUP), -CASES, group = SEX, fill = SEX),
stat = "identity",
subset(df, SEX == "Men")
) +
coord_flip() +
theme_minimal() +
labs(
title = "COVID-19 cases by age group and sex in Belgium",
subtitle = "Rolling 7 days window: {closest_state}",
caption = "Niko Speybroeck (@NikoSpeybroeck), Antoine Soetewey (@statsandr) \n Data: https://epistat.wiv-isp.be/covid/",
x = "Age group",
y = "Number of cases per week") +
scale_y_continuous(
# limits = c(lower_limit, upper_limit),
breaks = seq(lower_limit, upper_limit, 1000),
labels = abs(seq(lower_limit, upper_limit, 1000))
) +
theme(
legend.position = c(.95, .15),
legend.justification = c("right", "top"),
legend.box.just = "right",
legend.margin = margin(6, 6, 6, 6),
legend.title = element_blank(),
plot.title = element_text(face = "bold"),
plot.subtitle = element_text(face = "bold")
) +
geom_bar(aes(as.factor(AGEGROUP), POP, group = SEX, fill = SEX),
stat = "identity",
subset(df, SEX == "Women")
) +
geom_bar(aes(as.factor(AGEGROUP), -POP, group = SEX, fill = SEX),
stat = "identity",
subset(df, SEX == "Men")
) +
transition_states(DATE_RANGE, transition_length = 2, state_length = 0) +
# view_follow(fixed_x = TRUE) +
ease_aes("linear")
gif
# clean environment
remove(list = ls())
# required packages
library(ggplot2)
library(ggrepel)
library(zoo)
library(lme4)
library(plyr)
library(dplyr)
library(scales)
library(ggpubr)
library(grid)
library(gridExtra)
library(magrittr)
library(ggpol)
library(reshape2)
library(XML)
library(patchwork)
options(scipen = 99)
# import data
dat_all <- read.csv("TF_SOC_POP_STRUCT_2020.txt",
sep = ";",
stringsAsFactors = TRUE
)
dat <- dat_all[, c("CD_AGE", "CD_SEX", "MS_POPULATION")]
## Cutting dat$CD_AGE into dat$CD_AGEGROUP
dat$CD_AGEGROUP <- cut(dat$CD_AGE,
include.lowest = TRUE,
right = FALSE,
breaks = c(0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 120)
)
## Recoding dat$CD_AGEGROUP
dat$CD_AGEGROUP <- recode_factor(dat$CD_AGEGROUP,
"[0,10)" = "0-9",
"[10,20)" = "10-19",
"[20,30)" = "20-29",
"[30,40)" = "30-39",
"[40,50)" = "40-49",
"[50,60)" = "50-59",
"[60,70)" = "60-69",
"[70,80)" = "70-79",
"[80,90)" = "80-89",
"[90,120]" = "90+"
)
View(dat)
## Recoding dat_all$SEX into dat_all$SEX_rec
dat$CD_SEX <- recode_factor(dat$CD_SEX,
"F" = "Female",
"M" = "Male"
)
names(dat) <- c("AGE", "SEX", "POPULATION", "AGEGROUP")
# aggregate new cases by age group and sex
dat <- aggregate(POPULATION ~ AGEGROUP + SEX, dat, sum)
# Create plots in engl
p <- ggplot(data = dat) +
geom_bar(aes(AGEGROUP, POPULATION, group = SEX, fill = SEX),
stat = "identity",
subset(dat, SEX == "Female")
) +
geom_bar(aes(AGEGROUP, -POPULATION, group = SEX, fill = SEX),
stat = "identity",
subset(dat, SEX == "Male")
) +
scale_y_continuous(
breaks = seq(-round_any(max(dat$POPULATION), 100000, f = ceiling), round_any(max(dat$POPULATION), 1000, f = ceiling), 200000),
labels = abs(seq(-round_any(max(dat$POPULATION), 100000, f = ceiling), round_any(max(dat$POPULATION), 1000, f = ceiling), 200000))
) +
coord_flip() +
theme_minimal() +
labs(
title = "Population structure in Belgium",
subtitle = "2019",
caption = "Niko Speybroeck (@NikoSpeybroeck), Antoine Soetewey (@statsandr) \n Data: Statbel",
x = "Age group",
y = "Population"
) +
theme(
legend.position = c(.95, .95),
legend.justification = c("right", "top"),
legend.box.just = "right",
legend.margin = margin(6, 6, 6, 6),
legend.title = element_blank(),
plot.title = element_text(face = "bold"),
plot.subtitle = element_text(face = "bold")
)
p
# save plot
ggsave("pyramid-plot-population.png")
# ggsave("pyramid-plot.pdf")
# clean environment
remove(list = ls())
# required packages
library(ggplot2)
library(ggrepel)
library(zoo)
library(lme4)
library(plyr)
library(dplyr)
library(scales)
library(ggpubr)
library(grid)
library(gridExtra)
library(magrittr)
library(ggpol)
library(reshape2)
library(XML)
library(patchwork)
options(scipen = 99)
# import data
dat_all <- read.csv("TF_SOC_POP_STRUCT_2020.txt",
sep = ";",
stringsAsFactors = TRUE
)
dat <- dat_all[, c("CD_AGE", "CD_SEX", "MS_POPULATION")]
## Cutting dat$CD_AGE into dat$CD_AGEGROUP
dat$CD_AGEGROUP <- cut(dat$CD_AGE,
include.lowest = TRUE,
right = FALSE,
breaks = c(0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 120)
)
## Recoding dat$CD_AGEGROUP
dat$CD_AGEGROUP <- recode_factor(dat$CD_AGEGROUP,
"[0,10)" = "0-9",
"[10,20)" = "10-19",
"[20,30)" = "20-29",
"[30,40)" = "30-39",
"[40,50)" = "40-49",
"[50,60)" = "50-59",
"[60,70)" = "60-69",
"[70,80)" = "70-79",
"[80,90)" = "80-89",
"[90,120]" = "90+"
)
View(dat)
## Recoding dat_all$SEX into dat_all$SEX_rec
dat$CD_SEX <- recode_factor(dat$CD_SEX,
"F" = "Female",
"M" = "Male"
)
names(dat) <- c("AGE", "SEX", "POPULATION", "AGEGROUP")
# aggregate new cases by age group and sex
dat <- aggregate(POPULATION ~ AGEGROUP + SEX, dat, sum)
# Create plots in engl
p <- ggplot(data = dat) +
geom_bar(aes(AGEGROUP, POPULATION, group = SEX, fill = SEX),
stat = "identity",
subset(dat, SEX == "Female")
) +
geom_bar(aes(AGEGROUP, -POPULATION, group = SEX, fill = SEX),
stat = "identity",
subset(dat, SEX == "Male")
) +
scale_y_continuous(
breaks = seq(-round_any(max(dat$POPULATION), 100000, f = ceiling), round_any(max(dat$POPULATION), 1000, f = ceiling), 200000),
labels = abs(seq(-round_any(max(dat$POPULATION), 100000, f = ceiling), round_any(max(dat$POPULATION), 1000, f = ceiling), 200000))
) +
coord_flip() +
theme_minimal() +
labs(
title = "Population structure in Belgium",
subtitle = "2019",
caption = "Niko Speybroeck (@NikoSpeybroeck), Antoine Soetewey (@statsandr) \n Data: Statbel",
x = "Age group",
y = "Population"
) +
theme(
legend.position = c(.95, .95),
legend.justification = c("right", "top"),
legend.box.just = "right",
legend.margin = margin(6, 6, 6, 6),
legend.title = element_blank(),
plot.title = element_text(face = "bold"),
plot.subtitle = element_text(face = "bold")
)
p
# save plot
ggsave("pyramid-plot-population.png", width = 800, height = 450)
# ggsave("pyramid-plot.pdf")
# clean environment
remove(list = ls())
# required packages
library(ggplot2)
library(ggrepel)
library(zoo)
library(lme4)
library(plyr)
library(dplyr)
library(scales)
library(ggpubr)
library(grid)
library(gridExtra)
library(magrittr)
library(ggpol)
library(reshape2)
library(XML)
library(patchwork)
options(scipen = 99)
# import data
dat_all <- read.csv("TF_SOC_POP_STRUCT_2020.txt",
sep = ";",
stringsAsFactors = TRUE
)
dat <- dat_all[, c("CD_AGE", "CD_SEX", "MS_POPULATION")]
## Cutting dat$CD_AGE into dat$CD_AGEGROUP
dat$CD_AGEGROUP <- cut(dat$CD_AGE,
include.lowest = TRUE,
right = FALSE,
breaks = c(0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 120)
)
## Recoding dat$CD_AGEGROUP
dat$CD_AGEGROUP <- recode_factor(dat$CD_AGEGROUP,
"[0,10)" = "0-9",
"[10,20)" = "10-19",
"[20,30)" = "20-29",
"[30,40)" = "30-39",
"[40,50)" = "40-49",
"[50,60)" = "50-59",
"[60,70)" = "60-69",
"[70,80)" = "70-79",
"[80,90)" = "80-89",
"[90,120]" = "90+"
)
View(dat)
## Recoding dat_all$SEX into dat_all$SEX_rec
dat$CD_SEX <- recode_factor(dat$CD_SEX,
"F" = "Female",
"M" = "Male"
)
names(dat) <- c("AGE", "SEX", "POPULATION", "AGEGROUP")
# aggregate new cases by age group and sex
dat <- aggregate(POPULATION ~ AGEGROUP + SEX, dat, sum)
# Create plots in engl
p <- ggplot(data = dat) +
geom_bar(aes(AGEGROUP, POPULATION, group = SEX, fill = SEX),
stat = "identity",
subset(dat, SEX == "Female")
) +
geom_bar(aes(AGEGROUP, -POPULATION, group = SEX, fill = SEX),
stat = "identity",
subset(dat, SEX == "Male")
) +
scale_y_continuous(
breaks = seq(-round_any(max(dat$POPULATION), 100000, f = ceiling), round_any(max(dat$POPULATION), 1000, f = ceiling), 200000),
labels = abs(seq(-round_any(max(dat$POPULATION), 100000, f = ceiling), round_any(max(dat$POPULATION), 1000, f = ceiling), 200000))
) +
coord_flip() +
theme_minimal() +
labs(
title = "Population structure in Belgium",
subtitle = "2019",
caption = "Niko Speybroeck (@NikoSpeybroeck), Antoine Soetewey (@statsandr) \n Data: Statbel",
x = "Age group",
y = "Population"
) +
theme(
legend.position = c(.95, .95),
legend.justification = c("right", "top"),
legend.box.just = "right",
legend.margin = margin(6, 6, 6, 6),
legend.title = element_blank(),
plot.title = element_text(face = "bold"),
plot.subtitle = element_text(face = "bold")
)
p
# save plot
ggsave("pyramid-plot-population.png")
# ggsave("pyramid-plot.pdf")

y = "Population"
) +
theme(
legend.position = c(.95, .95),
legend.justification = c("right", "top"),
legend.box.just = "right",
legend.margin = margin(6, 6, 6, 6),
legend.title = element_blank(),
plot.title = element_text(face = "bold"),
plot.subtitle = element_text(face = "bold")
)
p
# save plot
ggsave("pyramid-plot-population.png")
# ggsave("pyramid-plot.pdf")
# clean environment
remove(list = ls())
# required packages
library(ggplot2)
library(ggrepel)
library(zoo)
library(lme4)
library(plyr)
library(dplyr)
library(scales)
library(ggpubr)
library(grid)
library(gridExtra)
library(magrittr)
library(ggpol)
library(reshape2)
library(XML)
library(patchwork)
options(scipen = 99)
# import data
dat_all <- read.csv("TF_SOC_POP_STRUCT_2020.txt",
sep = ";",
stringsAsFactors = TRUE
)
dat <- dat_all[, c("CD_AGE", "CD_SEX", "MS_POPULATION")]
## Cutting dat$CD_AGE into dat$CD_AGEGROUP
dat$CD_AGEGROUP <- cut(dat$CD_AGE,
include.lowest = TRUE,
right = FALSE,
breaks = c(0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 120)
)
## Recoding dat$CD_AGEGROUP
dat$CD_AGEGROUP <- recode_factor(dat$CD_AGEGROUP,
"[0,10)" = "0-9",
"[10,20)" = "10-19",
"[20,30)" = "20-29",
"[30,40)" = "30-39",
"[40,50)" = "40-49",
"[50,60)" = "50-59",
"[60,70)" = "60-69",
"[70,80)" = "70-79",
"[80,90)" = "80-89",
"[90,120]" = "90+"
)
View(dat)
## Recoding dat_all$SEX into dat_all$SEX_rec
dat$CD_SEX <- recode_factor(dat$CD_SEX,
"F" = "Female",
"M" = "Male"
)
names(dat) <- c("AGE", "SEX", "POPULATION", "AGEGROUP")
# aggregate new cases by age group and sex
dat <- aggregate(POPULATION ~ AGEGROUP + SEX, dat, sum)
# Create plots in engl
p <- ggplot(data = dat) +
geom_bar(aes(AGEGROUP, POPULATION, group = SEX, fill = SEX),
stat = "identity",
subset(dat, SEX == "Female")
) +
geom_bar(aes(AGEGROUP, -POPULATION, group = SEX, fill = SEX),
stat = "identity",
subset(dat, SEX == "Male")
) +
scale_y_continuous(
breaks = seq(-round_any(max(dat$POPULATION), 100000, f = ceiling), round_any(max(dat$POPULATION), 1000, f = ceiling), 200000),
labels = abs(seq(-round_any(max(dat$POPULATION), 100000, f = ceiling), round_any(max(dat$POPULATION), 1000, f = ceiling), 200000))
) +
coord_flip() +
theme_minimal() +
labs(
title = "Population structure in Belgium",
subtitle = "2019",
caption = "Niko Speybroeck (@NikoSpeybroeck), Antoine Soetewey (@statsandr) \n Data: Statbel",
x = "Age group",
y = "Population"
) +
theme(
legend.position = c(.95, .95),
legend.justification = c("right", "top"),
legend.box.just = "right",
legend.margin = margin(6, 6, 6, 6),
legend.title = element_blank(),
plot.title = element_text(face = "bold"),
plot.subtitle = element_text(face = "bold")
)
p
# save plot
ggsave("pyramid-plot-population.png", width = 800, height = 450)
# ggsave("pyramid-plot.pdf")
# clean environment
remove(list = ls())
# required packages
library(ggplot2)
library(ggrepel)
library(zoo)
library(lme4)
library(plyr)
library(dplyr)
library(scales)
library(ggpubr)
library(grid)
library(gridExtra)
library(magrittr)
library(ggpol)
library(reshape2)
library(XML)
library(patchwork)
options(scipen = 99)
# import data
dat_all <- read.csv("TF_SOC_POP_STRUCT_2020.txt",
sep = ";",
stringsAsFactors = TRUE
)
dat <- dat_all[, c("CD_AGE", "CD_SEX", "MS_POPULATION")]
## Cutting dat$CD_AGE into dat$CD_AGEGROUP
dat$CD_AGEGROUP <- cut(dat$CD_AGE,
include.lowest = TRUE,
right = FALSE,
breaks = c(0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 120)
)
## Recoding dat$CD_AGEGROUP
dat$CD_AGEGROUP <- recode_factor(dat$CD_AGEGROUP,
"[0,10)" = "0-9",
"[10,20)" = "10-19",
"[20,30)" = "20-29",
"[30,40)" = "30-39",
"[40,50)" = "40-49",
"[50,60)" = "50-59",
"[60,70)" = "60-69",
"[70,80)" = "70-79",
"[80,90)" = "80-89",
"[90,120]" = "90+"
)
View(dat)
## Recoding dat_all$SEX into dat_all$SEX_rec
dat$CD_SEX <- recode_factor(dat$CD_SEX,
"F" = "Female",
"M" = "Male"
)
names(dat) <- c("AGE", "SEX", "POPULATION", "AGEGROUP")
# aggregate new cases by age group and sex
dat <- aggregate(POPULATION ~ AGEGROUP + SEX, dat, sum)
# Create plots in engl
p <- ggplot(data = dat) +
geom_bar(aes(AGEGROUP, POPULATION, group = SEX, fill = SEX),
stat = "identity",
subset(dat, SEX == "Female")
) +
geom_bar(aes(AGEGROUP, -POPULATION, group = SEX, fill = SEX),
stat = "identity",
subset(dat, SEX == "Male")
) +
scale_y_continuous(
breaks = seq(-round_any(max(dat$POPULATION), 100000, f = ceiling), round_any(max(dat$POPULATION), 1000, f = ceiling), 200000),
labels = abs(seq(-round_any(max(dat$POPULATION), 100000, f = ceiling), round_any(max(dat$POPULATION), 1000, f = ceiling), 200000))
) +
coord_flip() +
theme_minimal() +
labs(
title = "Population structure in Belgium",
subtitle = "2019",
caption = "Niko Speybroeck (@NikoSpeybroeck), Antoine Soetewey (@statsandr) \n Data: Statbel",
x = "Age group",
y = "Population"
) +
theme(
legend.position = c(.95, .95),
legend.justification = c("right", "top"),
legend.box.just = "right",
legend.margin = margin(6, 6, 6, 6),
legend.title = element_blank(),
plot.title = element_text(face = "bold"),
plot.subtitle = element_text(face = "bold")
)
p
# save plot
ggsave("pyramid-plot-population.png")
# ggsave("pyramid-plot.pdf")
remove(list = ls())
# required packages
library(ggplot2)
library(ggrepel)
library(zoo)
library(lme4)
library(dplyr)
library(scales)
library(ggpubr)
library(grid)
library(gridExtra)
library(broom)
# import Sciensano hospitalisations data
dat <- read.csv("https://epistat.sciensano.be/Data/COVID19BE_HOSP.csv")
# clean environment
remove(list = ls())
### COVID19BE // AGE SEX TRENDS GIF
## required packages
library(gganimate)
library(ggplot2)
library(zoo)
## import data
dta <-
read.csv("https://epistat.sciensano.be/Data/COVID19BE_CASES_AGESEX.csv")
str(dta)
## collapse by date, age and sex
dta2 <- aggregate(CASES ~ DATE + AGEGROUP + SEX, dta, sum)
dta2$DATE <- as.Date(dta2$DATE)
## make full version - add zeroes
d <-
expand.grid(
stringsAsFactors = FALSE,
DATE = unique(dta2$DATE),
AGEGROUP = unique(dta2$AGEGROUP),
SEX = unique(dta2$SEX))
dta3 <- merge(d, dta2, all = TRUE)
dta3[is.na(dta3)] <- 0
## calculate rolling incidences
a <- with(dta3, tapply(CASES, list(AGEGROUP, SEX), rollsum, 7))
n <- length(a[[1]])
## compile dataframe
df <-
data.frame(
CASES = unlist(a),
AGEGROUP = rep(rep(unique(dta3$AGEGROUP), each = n), 2),
SEX = rep(unique(dta3$SEX), each = n*10),
DATE_FROM = rep(head(unique(dta3$DATE), -6), 2*10),
DATE_TO = rep(tail(unique(dta3$DATE), -6), 2*10))
df$DATE_RANGE <-
paste(format(df$DATE_FROM, "%d/%m/%Y"),
format(df$DATE_TO, "%d/%m/%Y"),
sep = "-")
df$DATE_RANGE <-
factor(df$DATE_RANGE, unique(df$DATE_RANGE))
## add incidence
POP <-
structure(list(SEX = c("F", "M", "F", "M", "F", "M", "F",
"M", "F", "M", "F", "M", "F", "M", "F", "M", "F", "M", "F", "M"
), AGEGROUP = c("0-9", "0-9", "10-19", "10-19", "20-29", "20-29",
"30-39", "30-39", "40-49", "40-49", "50-59", "50-59", "60-69",
"60-69", "70-79", "70-79", "80-89", "80-89", "90+", "90+"), POP = c(624521,
653781, 626569, 657008, 699447, 710611, 741647, 741911, 746138,
760756, 791752, 801745, 677294, 648434, 487617, 415187, 326756,
207895, 81437, 30900)), row.names = c(NA, -20L), class = "data.frame")
df <- merge(df, POP)
df$INC <- 1e5 * df$CASES / df$POP
## final steps
df$SEX <-
factor(df$SEX, levels = c("M", "F"), labels = c("Men", "Women"))
head(df)
##
## ABSOLUTE CASES
##
lower_limit <- -1000
upper_limit <- 2000
gif <-
ggplot(df) +
geom_bar(aes(as.factor(AGEGROUP), CASES, group = SEX, fill = SEX),
stat = "identity",
subset(df, SEX == "Women")
) +
geom_bar(aes(as.factor(AGEGROUP), -CASES, group = SEX, fill = SEX),
stat = "identity",
subset(df, SEX == "Men")
) +
coord_flip() +
theme_minimal() +
labs(
title = "COVID-19 cases by age group and sex in Belgium",
subtitle = "Rolling 7 days window: {closest_state}",
caption = "Niko Speybroeck (@NikoSpeybroeck), Antoine Soetewey (@statsandr) \n Data: https://epistat.wiv-isp.be/covid/",
x = "Age group",
y = "Number of cases per week") +
scale_y_continuous(
# limits = c(lower_limit, upper_limit),
breaks = seq(lower_limit, upper_limit, 1000),
labels = abs(seq(lower_limit, upper_limit, 1000))
) +
theme(
legend.position = c(.95, .15),
legend.justification = c("right", "top"),
legend.box.just = "right",
legend.margin = margin(6, 6, 6, 6),
legend.title = element_blank(),
plot.title = element_text(face = "bold"),
plot.subtitle = element_text(face = "bold")
) +
transition_states(DATE_RANGE, transition_length = 2, state_length = 0) +
# view_follow(fixed_x = TRUE) +
ease_aes("linear")
# gif
animate(
gif,
fps = 10, duration = floor(((nrow(df) / 2 / 10) + 20) / 10), end_pause = 20, width = 800, height = 450)
anim_save(filename = "pyramid-plot-week-animated.gif")
##
## INCIDENCE PER 100,000
##
lower_limit <- -1000
upper_limit <- 1000
gif <-
ggplot(df) +
geom_bar(aes(as.factor(AGEGROUP), INC, group = SEX, fill = SEX),
stat = "identity",
subset(df, SEX == "Women")
) +
geom_bar(aes(as.factor(AGEGROUP), -INC, group = SEX, fill = SEX),
stat = "identity",
subset(df, SEX == "Men")
) +
coord_flip() +
theme_minimal() +
labs(
title = "Age and sex specific incidence per 100 000 of COVID19 cases in Belgium",
subtitle = "Rolling 7 days window: {closest_state}",
caption = "Niko Speybroeck (@NikoSpeybroeck), Antoine Soetewey (@statsandr) \n Data: https://epistat.wiv-isp.be/covid/",
x = "Age group",
y = "Number of cases per week per 100 000") +
scale_y_continuous(
# limits = c(lower_limit, upper_limit),
breaks = seq(lower_limit, upper_limit, 1000),
labels = abs(seq(lower_limit, upper_limit, 1000))
) +
theme(
legend.position = c(.95, .15),
legend.justification = c("right", "top"),
legend.box.just = "right",
legend.margin = margin(6, 6, 6, 6),
legend.title = element_blank(),
plot.title = element_text(face = "bold"),
plot.subtitle = element_text(face = "bold")
) +
transition_states(DATE_RANGE, transition_length = 2, state_length = 0) +
# view_follow(fixed_x = TRUE) +
ease_aes("linear")
# gif
animate(
gif,
fps = 10, duration = floor(((nrow(df) / 2 / 10) + 20) / 10), end_pause = 20, width = 800, height = 450)
anim_save(filename = "pyramid-plot-week-animated-incidence.gif")
remove(list = ls())
# required packages
library(ggplot2)
library(ggrepel)
library(zoo)
library(lme4)
library(plyr)
library(dplyr)
library(scales)
library(ggpubr)
library(grid)
library(gridExtra)
library(magrittr)
library(ggpol)
library(reshape2)
library(XML)
library(patchwork)
# import data
dat_all <- read.csv("https://epistat.sciensano.be/Data/COVID19BE_CASES_AGESEX.csv",
stringsAsFactors = TRUE
)
dat_all$DATE <- as.Date(dat_all$DATE, "%Y-%m-%d")
## Recoding dat_all$SEX into dat_all$SEX_rec
dat_all$SEX <- recode_factor(dat_all$SEX,
"F" = "Female",
"M" = "Male"
)
# subset for period
start <- as.Date("2020-03-01")
end <- as.Date("2020-05-31")
dat <- subset(dat_all, DATE >= start & DATE <= end)
nweeks <- as.numeric(end - start) / 7
# aggregate new cases by province and date
dat <- aggregate(CASES ~ AGEGROUP + SEX, dat, sum)
# cases per week
dat$CASES <- dat$CASES / nweeks
# create limits for number of cases for all periods
lower_limit <- -500
upper_limit <- 600
# Create plots in engl
p1 <- ggplot(data = dat) +
geom_bar(aes(AGEGROUP, CASES, group = SEX, fill = SEX),
stat = "identity",
subset(dat, SEX == "Female")
) +
geom_bar(aes(AGEGROUP, -CASES, group = SEX, fill = SEX),
stat = "identity",
subset(dat, SEX == "Male")
) +
scale_y_continuous(
limits = c(lower_limit, upper_limit),
breaks = seq(lower_limit, upper_limit, 200),
labels = abs(seq(lower_limit, upper_limit, 200))
) +
coord_flip() +
theme_minimal() +
labs(
title = "COVID-19 cases in Belgium",
subtitle = paste0(format(start, format = "%d/%m/%Y"), " - ", format(end, format = "%d/%m/%Y")),
# caption = "Niko Speybroeck (@NikoSpeybroeck), Antoine Soetewey (@statsandr) \n Data: https://epistat.wiv-isp.be/covid/",
x = "Age group",
y = "Number of cases per week"
) +
theme(
legend.position = c(.95, .15),
legend.justification = c("right", "top"),
legend.box.just = "right",
legend.margin = margin(6, 6, 6, 6),
legend.title = element_blank(),
plot.title = element_text(face = "bold"),
plot.subtitle = element_text(face = "bold")
) +
geom_vline(xintercept = 0,size = 0.5,color = "black")
p1
# Create plots in engl
p1 <- ggplot(data = dat) +
geom_bar(aes(AGEGROUP, CASES, group = SEX, fill = SEX),
stat = "identity",
subset(dat, SEX == "Female")
) +
geom_bar(aes(AGEGROUP, -CASES, group = SEX, fill = SEX),
stat = "identity",
subset(dat, SEX == "Male")
) +
scale_y_continuous(
limits = c(lower_limit, upper_limit),
breaks = seq(lower_limit, upper_limit, 200),
labels = abs(seq(lower_limit, upper_limit, 200))
) +
coord_flip() +
theme_minimal() +
labs(
title = "COVID-19 cases in Belgium",
subtitle = paste0(format(start, format = "%d/%m/%Y"), " - ", format(end, format = "%d/%m/%Y")),
# caption = "Niko Speybroeck (@NikoSpeybroeck), Antoine Soetewey (@statsandr) \n Data: https://epistat.wiv-isp.be/covid/",
x = "Age group",
y = "Number of cases per week"
) +
theme(
legend.position = c(.95, .15),
legend.justification = c("right", "top"),
legend.box.just = "right",
legend.margin = margin(6, 6, 6, 6),
legend.title = element_blank(),
plot.title = element_text(face = "bold"),
plot.subtitle = element_text(face = "bold")
) +
geom_vline(xintercept = 0,size = 5,color = "black")
p1
# Create plots in engl
p1 <- ggplot(data = dat) +
geom_bar(aes(AGEGROUP, CASES, group = SEX, fill = SEX),
stat = "identity",
subset(dat, SEX == "Female")
) +
geom_bar(aes(AGEGROUP, -CASES, group = SEX, fill = SEX),
stat = "identity",
subset(dat, SEX == "Male")
) +
scale_y_continuous(
limits = c(lower_limit, upper_limit),
breaks = seq(lower_limit, upper_limit, 200),
labels = abs(seq(lower_limit, upper_limit, 200))
) +
coord_flip() +
theme_minimal() +
labs(
title = "COVID-19 cases in Belgium",
subtitle = paste0(format(start, format = "%d/%m/%Y"), " - ", format(end, format = "%d/%m/%Y")),
# caption = "Niko Speybroeck (@NikoSpeybroeck), Antoine Soetewey (@statsandr) \n Data: https://epistat.wiv-isp.be/covid/",
x = "Age group",
y = "Number of cases per week"
) +
theme(
legend.position = c(.95, .15),
legend.justification = c("right", "top"),
legend.box.just = "right",
legend.margin = margin(6, 6, 6, 6),
legend.title = element_blank(),
plot.title = element_text(face = "bold"),
plot.subtitle = element_text(face = "bold")
) +
geom_vline(xintercept = 0,size = 5,color = "blue")
p1
remove(list = ls())
### COVID19BE // AGE SEX TRENDS GIF
## required packages
library(gganimate)
library(ggplot2)
library(zoo)
## import data
dta <-
read.csv("https://epistat.sciensano.be/Data/COVID19BE_CASES_AGESEX.csv")
str(dta)
View(dta)
## collapse by date, age and sex
dta2 <- aggregate(CASES ~ DATE + AGEGROUP + SEX, dta, sum)
dta2$DATE <- as.Date(dta2$DATE)
View(dta2)

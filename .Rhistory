dat_ag <- filter(dat_ag, rep == 1)
dat_ag2 <- filter(dat, DATE == max(dat$DATE) & PROVINCE != "Belgium")
dat_ag <- dat_ag %>% left_join(dat_ag2, by = "PROVINCE")
names(dat_ag)[c(1, 5, 10)] <- c("date1", "per1", "per2")
## sf structure
map <- gadm_sf_loadCountries(c("BEL"), level = 2, basefile = "./")$sf
map <- map %>%
mutate(PROVINCE = case_when(
NAME_2 %in% c("Brabant Wallon", "Vlaams Brabant", "Bruxelles") ~ "Brabant",
!NAME_2 %in% c("Brabant Wallon", "Vlaams Brabant", "Bruxelles") ~ NAME_2
)) %>%
group_by(PROVINCE) %>%
summarise(geometry = st_union(geometry)) %>%
left_join(dat_ag, by = "PROVINCE") %>%
mutate(
class1 = cut(per1,
breaks = c(0, 500, 1000, 1250, 1500, 2000, 99999),
include.lowest = TRUE,
labels = c("[ 0, 500 ]","[ 500, 1000 ]","] 1000, 1250 ]", "] 1250, 1500 ]", "] 1500, 2000 ]", " > 2000")
),
class2 = cut(per2,
breaks = c(0, 500, 1000, 1250, 1500, 2000, 99999),
include.lowest = TRUE,
labels = c("[ 0, 500 ]", "[ 500, 1000 ]", "] 1000, 1250 ]", "] 1250, 1500 ]", "] 1500, 2000 ]", " > 2000")
)
)
###### MAPS WITH GGPLOT
points <- st_centroid(map)
points <- cbind(map, st_coordinates(st_centroid(map$geometry)))
points <- mutate(points,
num_1 = paste("(", format(round(per1, 0), nsmall = 0), ")"),
date_1 = paste(format(date1, format = "%d/%m")),
num_2 = paste("(", format(round(per2, 0), nsmall = 0), ")")
)
period1 <- paste0("Date indicated on map", "   ")
period2 <- paste0(
"Date: ",
format(max(dat$DATE), format = "%d/%m"), "   "
)
library(RColorBrewer)
# https://www.color-hex.com/
blues <- c("white", brewer.pal(5, "Blues"))
# blues <- c("white", "#F9FAFF", brewer.pal(6, "Blues")[2:5])
map1 <- ggplot(map) +
geom_sf(aes(fill = class1)) +
scale_fill_manual(values = blues, drop = FALSE) +
geom_text(
data = points, aes(x = X, y = Y + 0.1, label = PROVINCE), col = "black", size = 2.4, nudge_x = -0.07,
check_overlap = TRUE
) +
geom_text(
data = points, aes(x = X, y = Y + 0.04, label = date_1), col = "black", size = 2.6, nudge_x = -0.07,
check_overlap = TRUE
) +
geom_text(
data = points, aes(x = X, y = Y - 0.04, label = num_1), col = "black", size = 3, nudge_x = -0.07,
check_overlap = TRUE
) +
labs(fill = bquote(atop(NA, atop("Number of patients (max. first peak)\nin hospitals (x belgian pop.)", bold(.(period1)))))) +
theme_void() +
theme(
# Change legend
legend.position = c(0.18, 0.2),
legend.key.size = unit(0.9, "line"),
legend.title = element_text(size = 12, color = "black"),
legend.text = element_text(color = "black"),
plot.margin = unit(c(+0.2, 0, +0.5, 3), "cm")
)
map2 <- ggplot(map) +
geom_sf(aes(fill = class2)) +
scale_fill_manual(values = blues, drop = FALSE) +
geom_text(
data = points, aes(x = X, y = Y + 0.06, label = PROVINCE), col = "black", size = 2.4, nudge_x = -0.07,
check_overlap = TRUE
) +
geom_text(
data = points, aes(x = X, y = Y - 0.02, label = num_2), col = "black", size = 3, nudge_x = -0.07,
check_overlap = TRUE
) +
labs(fill = bquote(atop(NA, atop("Number of patients\nin hospitals (x belgian pop.)", bold(.(period2)))))) +
theme_void() +
theme(
# Change legend
legend.position = c(0.18, 0.2),
legend.key.size = unit(0.9, "line"),
legend.title = element_text(size = 12, color = "black"),
legend.text = element_text(color = "black"),
plot.margin = unit(c(+0.2, 0, +0.5, 3), "cm")
)
# save plot
png(file = "Belgian_HOSP_BEL_0611_peak.png", width = 15 * 360, height = 7 * 360, units = "px", pointsize = 7, res = 300)
ggarrange(ggarrange(map1, map2, ncol = 1),
grid.arrange(fig_trends, bottom = caption),
ncol = 2, widths = c(1, 1.5)
)
dev.off()
# clean environment
remove(list = ls())
### COVID19BE // AGE SEX TRENDS GIF
## required packages
library(gganimate)
library(ggplot2)
library(zoo)
## import data
dta <-
read.csv("https://epistat.sciensano.be/Data/COVID19BE_CASES_AGESEX.csv")
str(dta)
## collapse by date, age and sex
dta2 <- aggregate(CASES ~ DATE + AGEGROUP + SEX, dta, sum)
dta2$DATE <- as.Date(dta2$DATE)
## make full version - add zeroes
d <-
expand.grid(
stringsAsFactors = FALSE,
DATE = unique(dta2$DATE),
AGEGROUP = unique(dta2$AGEGROUP),
SEX = unique(dta2$SEX))
dta3 <- merge(d, dta2, all = TRUE)
dta3[is.na(dta3)] <- 0
## calculate rolling incidences
a <- with(dta3, tapply(CASES, list(AGEGROUP, SEX), rollsum, 7))
n <- length(a[[1]])
## compile dataframe
df <-
data.frame(
CASES = unlist(a),
AGEGROUP = rep(rep(unique(dta3$AGEGROUP), each = n), 2),
SEX = rep(unique(dta3$SEX), each = n*10),
DATE_FROM = rep(head(unique(dta3$DATE), -6), 2*10),
DATE_TO = rep(tail(unique(dta3$DATE), -6), 2*10))
df$DATE_RANGE <-
paste(format(df$DATE_FROM, "%d/%m/%Y"),
format(df$DATE_TO, "%d/%m/%Y"),
sep = "-")
df$DATE_RANGE <-
factor(df$DATE_RANGE, unique(df$DATE_RANGE))
## add incidence
POP <-
structure(list(SEX = c("F", "M", "F", "M", "F", "M", "F",
"M", "F", "M", "F", "M", "F", "M", "F", "M", "F", "M", "F", "M"
), AGEGROUP = c("0-9", "0-9", "10-19", "10-19", "20-29", "20-29",
"30-39", "30-39", "40-49", "40-49", "50-59", "50-59", "60-69",
"60-69", "70-79", "70-79", "80-89", "80-89", "90+", "90+"), POP = c(624521,
653781, 626569, 657008, 699447, 710611, 741647, 741911, 746138,
760756, 791752, 801745, 677294, 648434, 487617, 415187, 326756,
207895, 81437, 30900)), row.names = c(NA, -20L), class = "data.frame")
df <- merge(df, POP)
df$INC <- 1e5 * df$CASES / df$POP
## final steps
df$SEX <-
factor(df$SEX, levels = c("M", "F"), labels = c("Men", "Women"))
head(df)
##
## ABSOLUTE CASES
##
lower_limit <- -1000
upper_limit <- 2000
gif <-
ggplot(df) +
geom_bar(aes(as.factor(AGEGROUP), CASES, group = SEX, fill = SEX),
stat = "identity",
subset(df, SEX == "Women")
) +
geom_bar(aes(as.factor(AGEGROUP), -CASES, group = SEX, fill = SEX),
stat = "identity",
subset(df, SEX == "Men")
) +
coord_flip() +
theme_minimal() +
labs(
title = "COVID-19 cases by age group and sex in Belgium",
subtitle = "Rolling 7 days window: {closest_state}",
caption = "Niko Speybroeck (@NikoSpeybroeck), Antoine Soetewey (@statsandr) \n Data: https://epistat.wiv-isp.be/covid/",
x = "Age group",
y = "Number of cases per week") +
scale_y_continuous(
# limits = c(lower_limit, upper_limit),
breaks = seq(lower_limit, upper_limit, 1000),
labels = abs(seq(lower_limit, upper_limit, 1000))
) +
theme(
legend.position = c(.95, .15),
legend.justification = c("right", "top"),
legend.box.just = "right",
legend.margin = margin(6, 6, 6, 6),
legend.title = element_blank(),
plot.title = element_text(face = "bold"),
plot.subtitle = element_text(face = "bold")
) +
transition_states(DATE_RANGE, transition_length = 2, state_length = 0) +
# view_follow(fixed_x = TRUE) +
ease_aes("linear")
# gif
animate(
gif,
fps = 10, duration = floor(((nrow(df) / 2 / 10) + 20) / 10), end_pause = 20, width = 800, height = 450)
anim_save(filename = "pyramid-plot-week-animated.gif")
##
## INCIDENCE PER 100,000
##
lower_limit <- -1000
upper_limit <- 1000
gif <-
ggplot(df) +
geom_bar(aes(as.factor(AGEGROUP), INC, group = SEX, fill = SEX),
stat = "identity",
subset(df, SEX == "Women")
) +
geom_bar(aes(as.factor(AGEGROUP), -INC, group = SEX, fill = SEX),
stat = "identity",
subset(df, SEX == "Men")
) +
coord_flip() +
theme_minimal() +
labs(
title = "Age and sex specific incidence per 100 000 of COVID19 cases in Belgium",
subtitle = "Rolling 7 days window: {closest_state}",
caption = "Niko Speybroeck (@NikoSpeybroeck), Antoine Soetewey (@statsandr) \n Data: https://epistat.wiv-isp.be/covid/",
x = "Age group",
y = "Number of cases per week per 100 000 individuals") +
scale_y_continuous(
# limits = c(lower_limit, upper_limit),
breaks = seq(lower_limit, upper_limit, 1000),
labels = abs(seq(lower_limit, upper_limit, 1000))
) +
theme(
legend.position = c(.95, .15),
legend.justification = c("right", "top"),
legend.box.just = "right",
legend.margin = margin(6, 6, 6, 6),
legend.title = element_blank(),
plot.title = element_text(face = "bold"),
plot.subtitle = element_text(face = "bold")
) +
transition_states(DATE_RANGE, transition_length = 2, state_length = 0) +
# view_follow(fixed_x = TRUE) +
ease_aes("linear")
# gif
animate(
gif,
fps = 10, duration = floor(((nrow(df) / 2 / 10) + 20) / 10), end_pause = 20, width = 800, height = 450)
anim_save(filename = "pyramid-plot-week-animated-incidence.gif")
remove(list = ls())
### COVID19BE // AGE SEX TRENDS GIF
## required packages
library(gganimate)
library(ggplot2)
library(zoo)
## import data
dta <-
read.csv("https://epistat.sciensano.be/Data/COVID19BE_CASES_AGESEX.csv")
str(dta)
View(dta)
## collapse by date, age and sex
dta2 <- aggregate(CASES ~ DATE + AGEGROUP + SEX, dta, sum)
dta2$DATE <- as.Date(dta2$DATE)
## make full version - add zeroes
d <-
expand.grid(
stringsAsFactors = FALSE,
DATE = unique(dta2$DATE),
AGEGROUP = unique(dta2$AGEGROUP),
SEX = unique(dta2$SEX))
dta3 <- merge(d, dta2, all = TRUE)
dta3[is.na(dta3)] <- 0
## calculate rolling incidences
a <- with(dta3, tapply(CASES, list(AGEGROUP, SEX), rollsum, 7))
n <- length(a[[1]])
## compile dataframe
df <-
data.frame(
CASES = unlist(a),
AGEGROUP = rep(rep(unique(dta3$AGEGROUP), each = n), 2),
SEX = rep(unique(dta3$SEX), each = n*10),
DATE_FROM = rep(head(unique(dta3$DATE), -6), 2*10),
DATE_TO = rep(tail(unique(dta3$DATE), -6), 2*10))
df$DATE_RANGE <-
paste(format(df$DATE_FROM, "%d/%m/%Y"),
format(df$DATE_TO, "%d/%m/%Y"),
sep = "-")
df$DATE_RANGE <-
factor(df$DATE_RANGE, unique(df$DATE_RANGE))
## add incidence
POP <-
structure(list(SEX = c("F", "M", "F", "M", "F", "M", "F",
"M", "F", "M", "F", "M", "F", "M", "F", "M", "F", "M", "F", "M"
), AGEGROUP = c("0-9", "0-9", "10-19", "10-19", "20-29", "20-29",
"30-39", "30-39", "40-49", "40-49", "50-59", "50-59", "60-69",
"60-69", "70-79", "70-79", "80-89", "80-89", "90+", "90+"), POP = c(624521,
653781, 626569, 657008, 699447, 710611, 741647, 741911, 746138,
760756, 791752, 801745, 677294, 648434, 487617, 415187, 326756,
207895, 81437, 30900)), row.names = c(NA, -20L), class = "data.frame")
df <- merge(df, POP)
df$INC <- 1e5 * df$CASES / df$POP
## final steps
df$SEX <-
factor(df$SEX, levels = c("M", "F"), labels = c("Men", "Women"))
head(df)
View(df)
floor(((nrow(df) / 2 / 10) + 20) / 10)
lower_limit <- -1000
upper_limit <- 1000
gif <-
ggplot(df) +
geom_bar(aes(as.factor(AGEGROUP), INC, group = SEX, fill = SEX),
stat = "identity",
subset(df, SEX == "Women")
) +
geom_bar(aes(as.factor(AGEGROUP), -INC, group = SEX, fill = SEX),
stat = "identity",
subset(df, SEX == "Men")
) +
coord_flip() +
theme_minimal() +
labs(
title = "Age and sex specific incidence per 100 000 of COVID19 cases in Belgium",
subtitle = "Rolling 7 days window: {closest_state}",
caption = "Niko Speybroeck (@NikoSpeybroeck), Antoine Soetewey (@statsandr) \n Data: https://epistat.wiv-isp.be/covid/",
x = "Age group",
y = "Number of cases per week per 100 000 individuals") +
scale_y_continuous(
# limits = c(lower_limit, upper_limit),
breaks = seq(lower_limit, upper_limit, 1000),
labels = abs(seq(lower_limit, upper_limit, 1000))
) +
theme(
legend.position = c(.95, .15),
legend.justification = c("right", "top"),
legend.box.just = "right",
legend.margin = margin(6, 6, 6, 6),
legend.title = element_blank(),
plot.title = element_text(face = "bold"),
plot.subtitle = element_text(face = "bold")
) +
transition_states(DATE_RANGE, transition_length = 2, state_length = 0) +
# view_follow(fixed_x = TRUE) +
ease_aes("linear")
# gif
animate(
gif,
fps = 10, duration = floor(((nrow(df) / 2 / 10) + 20) / 10), end_pause = 20, width = 800, height = 450)
# gif
animate(
gif,
fps = 10, duration = floor(((nrow(df) / 2 / 10) + 20) / 10) + 200, end_pause = 20, width = 800, height = 450)
1+1
# gif
animate(
gif,
fps = 10, duration = floor(((nrow(df) / 2 / 10) + 20) / 10) + 10, end_pause = 20, width = 800, height = 450)
# gif
animate(
gif,
fps = 10,  end_pause = 20, width = 800, height = 450)
floor(((nrow(df) / 2 / 10) + 20) / 10)
nrow(df)
nlevels(df$AGEGROUP)
levels(df$AGEGROUP)
# gif
animate(
gif,
fps = 10, duration = floor(((nrow(df) / 2 / 10) + 20) / 9), end_pause = 20, width = 800, height = 450)
# gif
animate(
gif,
fps = 10, duration = ceiling(((nrow(df) / 2 / 10) + 20) / 10), end_pause = 20, width = 800, height = 450)
# clean environment
remove(list = ls())
### COVID19BE // AGE SEX TRENDS GIF
## required packages
library(gganimate)
library(ggplot2)
library(zoo)
## import data
dta <-
read.csv("https://epistat.sciensano.be/Data/COVID19BE_CASES_AGESEX.csv")
str(dta)
## collapse by date, age and sex
dta2 <- aggregate(CASES ~ DATE + AGEGROUP + SEX, dta, sum)
dta2$DATE <- as.Date(dta2$DATE)
## make full version - add zeroes
d <-
expand.grid(
stringsAsFactors = FALSE,
DATE = unique(dta2$DATE),
AGEGROUP = unique(dta2$AGEGROUP),
SEX = unique(dta2$SEX))
dta3 <- merge(d, dta2, all = TRUE)
dta3[is.na(dta3)] <- 0
## calculate rolling incidences
a <- with(dta3, tapply(CASES, list(AGEGROUP, SEX), rollsum, 7))
n <- length(a[[1]])
## compile dataframe
df <-
data.frame(
CASES = unlist(a),
AGEGROUP = rep(rep(unique(dta3$AGEGROUP), each = n), 2),
SEX = rep(unique(dta3$SEX), each = n*10),
DATE_FROM = rep(head(unique(dta3$DATE), -6), 2*10),
DATE_TO = rep(tail(unique(dta3$DATE), -6), 2*10))
df$DATE_RANGE <-
paste(format(df$DATE_FROM, "%d/%m/%Y"),
format(df$DATE_TO, "%d/%m/%Y"),
sep = "-")
df$DATE_RANGE <-
factor(df$DATE_RANGE, unique(df$DATE_RANGE))
## add incidence
POP <-
structure(list(SEX = c("F", "M", "F", "M", "F", "M", "F",
"M", "F", "M", "F", "M", "F", "M", "F", "M", "F", "M", "F", "M"
), AGEGROUP = c("0-9", "0-9", "10-19", "10-19", "20-29", "20-29",
"30-39", "30-39", "40-49", "40-49", "50-59", "50-59", "60-69",
"60-69", "70-79", "70-79", "80-89", "80-89", "90+", "90+"), POP = c(624521,
653781, 626569, 657008, 699447, 710611, 741647, 741911, 746138,
760756, 791752, 801745, 677294, 648434, 487617, 415187, 326756,
207895, 81437, 30900)), row.names = c(NA, -20L), class = "data.frame")
df <- merge(df, POP)
df$INC <- 1e5 * df$CASES / df$POP
## final steps
df$SEX <-
factor(df$SEX, levels = c("M", "F"), labels = c("Men", "Women"))
head(df)
##
## ABSOLUTE CASES
##
lower_limit <- -1000
upper_limit <- 2000
gif <-
ggplot(df) +
geom_bar(aes(as.factor(AGEGROUP), CASES, group = SEX, fill = SEX),
stat = "identity",
subset(df, SEX == "Women")
) +
geom_bar(aes(as.factor(AGEGROUP), -CASES, group = SEX, fill = SEX),
stat = "identity",
subset(df, SEX == "Men")
) +
coord_flip() +
theme_minimal() +
labs(
title = "COVID-19 cases by age group and sex in Belgium",
subtitle = "Rolling 7 days window: {closest_state}",
caption = "Niko Speybroeck (@NikoSpeybroeck), Antoine Soetewey (@statsandr) \n Data: https://epistat.wiv-isp.be/covid/",
x = "Age group",
y = "Number of cases per week") +
scale_y_continuous(
# limits = c(lower_limit, upper_limit),
breaks = seq(lower_limit, upper_limit, 1000),
labels = abs(seq(lower_limit, upper_limit, 1000))
) +
theme(
legend.position = c(.95, .15),
legend.justification = c("right", "top"),
legend.box.just = "right",
legend.margin = margin(6, 6, 6, 6),
legend.title = element_blank(),
plot.title = element_text(face = "bold"),
plot.subtitle = element_text(face = "bold")
) +
transition_states(DATE_RANGE, transition_length = 2, state_length = 0) +
# view_follow(fixed_x = TRUE) +
ease_aes("linear")
# gif
animate(
gif,
fps = 10, duration = ceiling(((nrow(df) / 2 / 10) + 20) / 10), end_pause = 20, width = 800, height = 450)
anim_save(filename = "pyramid-plot-week-animated.gif")
##
## INCIDENCE PER 100,000
##
lower_limit <- -1000
upper_limit <- 1000
gif <-
ggplot(df) +
geom_bar(aes(as.factor(AGEGROUP), INC, group = SEX, fill = SEX),
stat = "identity",
subset(df, SEX == "Women")
) +
geom_bar(aes(as.factor(AGEGROUP), -INC, group = SEX, fill = SEX),
stat = "identity",
subset(df, SEX == "Men")
) +
coord_flip() +
theme_minimal() +
labs(
title = "Age and sex specific incidence per 100 000 of COVID19 cases in Belgium",
subtitle = "Rolling 7 days window: {closest_state}",
caption = "Niko Speybroeck (@NikoSpeybroeck), Antoine Soetewey (@statsandr) \n Data: https://epistat.wiv-isp.be/covid/",
x = "Age group",
y = "Number of cases per week per 100 000 individuals") +
scale_y_continuous(
# limits = c(lower_limit, upper_limit),
breaks = seq(lower_limit, upper_limit, 1000),
labels = abs(seq(lower_limit, upper_limit, 1000))
) +
theme(
legend.position = c(.95, .15),
legend.justification = c("right", "top"),
legend.box.just = "right",
legend.margin = margin(6, 6, 6, 6),
legend.title = element_blank(),
plot.title = element_text(face = "bold"),
plot.subtitle = element_text(face = "bold")
) +
transition_states(DATE_RANGE, transition_length = 2, state_length = 0) +
# view_follow(fixed_x = TRUE) +
ease_aes("linear")
# gif
animate(
gif,
fps = 10, duration = ceiling(((nrow(df) / 2 / 10) + 20) / 10), end_pause = 20, width = 800, height = 450)
anim_save(filename = "pyramid-plot-week-animated-incidence.gif")

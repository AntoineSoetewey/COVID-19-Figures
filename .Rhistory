scale_y_continuous(breaks = seq(from = 0, to = 3, by = 1), limits = c(0, 3)) +
# scale_x_date(breaks = c("2020-08-01", "2020-09-01", "2020-09-30"), labels = date_format("%m-%Y"))
fig_trends
# Create plot in dutch/fr
fig_trends <- ggplot(
subset(dat, DATE >= "2020-08-01"),
aes(x = DATE, y = NEW_IN_divid)
) +
geom_point(
size = 1L,
colour = "steelblue"
) +
labs(x = "", y = "Nombre d'hospitalisations (par 100,000 habitants) / Hospitalisaties (per 100,000 inwoners)") +
theme_minimal() +
facet_wrap(vars(PROVINCE),
scales = "free"
) +
geom_smooth(
se = FALSE,
col = "grey",
method = "gam",
formula = y ~ s(x)
) +
annotate("rect",
ymin = -Inf, ymax = Inf,
xmin = as.Date("2020-08-01"), xmax = as.Date("2020-09-01"),
alpha = .2
) +
annotate("rect",
ymin = -Inf, ymax = Inf,
xmin = as.Date("2020-09-01"), xmax = as.Date("2020-09-30"),
alpha = .05
) +
# annotate("rect",
#   ymin = -Inf, ymax = Inf,
#   xmin = as.Date("2020-05-01"), xmax = as.Date("2020-06-01"),
#   alpha = .2
# ) +
# annotate("rect",
#   ymin = -Inf, ymax = Inf,
#   xmin = as.Date("2020-06-01"), xmax = as.Date("2020-07-01"),
#   alpha = .05
# ) +
# annotate("rect",
#   ymin = -Inf, ymax = Inf,
#   xmin = as.Date("2020-07-01"), xmax = as.Date("2020-08-01"),
#   alpha = .2
# ) +
labs(
title = "Evolution des admissions hospitalières / Evolutie van de hospitalisaties - COVID-19"
) +
scale_y_continuous(breaks = seq(from = 0, to = 3, by = 1), limits = c(0, 3)) +
# scale_x_date(breaks = c("2020-08-01", "2020-09-01", "2020-09-30"), labels = date_format("%m-%Y"))
fig_trends
# Create plot in dutch/fr
fig_trends <- ggplot(
subset(dat, DATE >= "2020-08-01"),
aes(x = DATE, y = NEW_IN_divid)
) +
geom_point(
size = 1L,
colour = "steelblue"
) +
labs(x = "", y = "Nombre d'hospitalisations (par 100,000 habitants) / Hospitalisaties (per 100,000 inwoners)") +
theme_minimal() +
facet_wrap(vars(PROVINCE),
scales = "free"
) +
geom_smooth(
se = FALSE,
col = "grey",
method = "gam",
formula = y ~ s(x)
) +
annotate("rect",
ymin = -Inf, ymax = Inf,
xmin = as.Date("2020-08-01"), xmax = as.Date("2020-09-01"),
alpha = .2
) +
annotate("rect",
ymin = -Inf, ymax = Inf,
xmin = as.Date("2020-09-01"), xmax = as.Date("2020-09-30"),
alpha = .05
) +
# annotate("rect",
#   ymin = -Inf, ymax = Inf,
#   xmin = as.Date("2020-05-01"), xmax = as.Date("2020-06-01"),
#   alpha = .2
# ) +
# annotate("rect",
#   ymin = -Inf, ymax = Inf,
#   xmin = as.Date("2020-06-01"), xmax = as.Date("2020-07-01"),
#   alpha = .05
# ) +
# annotate("rect",
#   ymin = -Inf, ymax = Inf,
#   xmin = as.Date("2020-07-01"), xmax = as.Date("2020-08-01"),
#   alpha = .2
# ) +
labs(
title = "Evolution des admissions hospitalières / Evolutie van de hospitalisaties - COVID-19"
) +
scale_y_continuous(breaks = seq(from = 0, to = 3, by = 1), limits = c(0, 3))
# scale_x_date(breaks = c("2020-08-01", "2020-09-01", "2020-09-30"), labels = date_format("%m-%Y"))
fig_trends
# Create plot in dutch/fr
fig_trends <- ggplot(
subset(dat, DATE >= "2020-08-01"),
aes(x = DATE, y = NEW_IN_divid)
) +
geom_point(
size = 1L,
colour = "steelblue"
) +
labs(x = "", y = "Nombre d'hospitalisations (par 100,000 habitants) / Hospitalisaties (per 100,000 inwoners)") +
theme_minimal() +
facet_wrap(vars(PROVINCE),
scales = "free"
) +
geom_smooth(
se = FALSE,
col = "grey",
method = "gam",
formula = y ~ s(x)
) +
annotate("rect",
ymin = -Inf, ymax = Inf,
xmin = as.Date("2020-08-01"), xmax = as.Date("2020-09-01"),
alpha = .2
) +
annotate("rect",
ymin = -Inf, ymax = Inf,
xmin = as.Date("2020-09-01"), xmax = as.Date("2020-09-30"),
alpha = .05
) +
# annotate("rect",
#   ymin = -Inf, ymax = Inf,
#   xmin = as.Date("2020-05-01"), xmax = as.Date("2020-06-01"),
#   alpha = .2
# ) +
# annotate("rect",
#   ymin = -Inf, ymax = Inf,
#   xmin = as.Date("2020-06-01"), xmax = as.Date("2020-07-01"),
#   alpha = .05
# ) +
# annotate("rect",
#   ymin = -Inf, ymax = Inf,
#   xmin = as.Date("2020-07-01"), xmax = as.Date("2020-08-01"),
#   alpha = .2
# ) +
labs(
title = "Evolution des admissions hospitalières / Evolutie van de hospitalisaties - COVID-19"
) +
scale_y_continuous(breaks = seq(from = 0, to = 3, by = 1), limits = c(0, 3)) +
scale_x_date(labels = date_format("%d-%m"))
fig_trends
# Create plot in dutch/fr
fig_trends <- ggplot(
subset(dat, DATE >= "2020-08-01"),
aes(x = DATE, y = NEW_IN_divid)
) +
geom_point(
size = 1L,
colour = "steelblue"
) +
labs(x = "", y = "Nombre d'hospitalisations (par 100,000 habitants) / Hospitalisaties (per 100,000 inwoners)") +
theme_minimal() +
facet_wrap(vars(PROVINCE),
scales = "free"
) +
geom_smooth(
se = FALSE,
col = "grey",
method = "gam",
formula = y ~ s(x)
) +
annotate("rect",
ymin = -Inf, ymax = Inf,
xmin = as.Date("2020-08-01"), xmax = as.Date("2020-09-01"),
alpha = .2
) +
annotate("rect",
ymin = -Inf, ymax = Inf,
xmin = as.Date("2020-09-01"), xmax = as.Date("2020-10-01"),
alpha = .05
) +
# annotate("rect",
#   ymin = -Inf, ymax = Inf,
#   xmin = as.Date("2020-05-01"), xmax = as.Date("2020-06-01"),
#   alpha = .2
# ) +
# annotate("rect",
#   ymin = -Inf, ymax = Inf,
#   xmin = as.Date("2020-06-01"), xmax = as.Date("2020-07-01"),
#   alpha = .05
# ) +
# annotate("rect",
#   ymin = -Inf, ymax = Inf,
#   xmin = as.Date("2020-07-01"), xmax = as.Date("2020-08-01"),
#   alpha = .2
# ) +
labs(
title = "Evolution des admissions hospitalières / Evolutie van de hospitalisaties - COVID-19"
) +
scale_y_continuous(breaks = seq(from = 0, to = 3, by = 1), limits = c(0, 3)) +
scale_x_date(labels = date_format("%d-%m"))
fig_trends
# Create plot in dutch/fr
fig_trends <- ggplot(
subset(dat, DATE >= "2020-08-01"),
aes(x = DATE, y = NEW_IN_divid)
) +
geom_point(
size = 1L,
colour = "steelblue"
) +
labs(x = "", y = "Nombre d'hospitalisations (par 100,000 habitants) / Hospitalisaties (per 100,000 inwoners)") +
theme_minimal() +
facet_wrap(vars(PROVINCE),
scales = "free"
) +
geom_smooth(
se = FALSE,
col = "grey",
method = "gam",
formula = y ~ s(x)
) +
annotate("rect",
ymin = -Inf, ymax = Inf,
xmin = as.Date("2020-08-01"), xmax = as.Date("2020-09-01"),
alpha = .2
) +
annotate("rect",
ymin = -Inf, ymax = Inf,
xmin = as.Date("2020-09-01"), xmax = as.Date("2020-10-01"),
alpha = .05
) +
# annotate("rect",
#   ymin = -Inf, ymax = Inf,
#   xmin = as.Date("2020-05-01"), xmax = as.Date("2020-06-01"),
#   alpha = .2
# ) +
# annotate("rect",
#   ymin = -Inf, ymax = Inf,
#   xmin = as.Date("2020-06-01"), xmax = as.Date("2020-07-01"),
#   alpha = .05
# ) +
# annotate("rect",
#   ymin = -Inf, ymax = Inf,
#   xmin = as.Date("2020-07-01"), xmax = as.Date("2020-08-01"),
#   alpha = .2
# ) +
labs(
title = "Evolution des admissions hospitalières / Evolutie van de hospitalisaties - COVID-19"
) +
scale_y_continuous(breaks = seq(from = 0, to = 2.5, by = 1), limits = c(0, 2.5)) +
scale_x_date(labels = date_format("%d-%m"))
fig_trends
# clean environment
remove(list = ls())
# required packages
library(ggplot2)
library(ggrepel)
library(zoo)
library(lme4)
library(dplyr)
library(scales)
library(ggpubr)
library(grid)
library(gridExtra)
# import Sciensano hospitalisations data
dat <- read.csv("https://epistat.sciensano.be/Data/COVID19BE_HOSP.csv")
# aggregate new intakes by province and date
dat <- aggregate(NEW_IN ~ DATE + PROVINCE, dat, sum)
remove(list = ls())
# required packages
library(ggplot2)
library(ggrepel)
library(zoo)
library(lme4)
library(dplyr)
library(scales)
library(ggpubr)
library(grid)
library(gridExtra)
# import Sciensano hospitalisations data
dat <- read.csv("https://epistat.sciensano.be/Data/COVID19BE_HOSP.csv")
questionr:::irec()
# required packages
library(ggplot2)
library(ggrepel)
library(zoo)
library(lme4)
library(dplyr)
library(scales)
library(ggpubr)
library(grid)
library(gridExtra)
# import Sciensano hospitalisations data
dat <- read.csv("https://epistat.sciensano.be/Data/COVID19BE_HOSP.csv")
## Recoding dat$PROVINCE
dat$PROVINCE <- recode_factor(dat$PROVINCE,
"Brussels" = "BXL-BW-VB",
"VlaamsBrabant" = "BXL-BW-VB",
"BrabantWallon" = "BXL-BW-VB"
)
# aggregate new intakes by province and date
dat <- aggregate(NEW_IN ~ DATE + PROVINCE, dat, sum)
# add new intakes for Belgium as a whole
belgium <- aggregate(NEW_IN ~ DATE, dat, sum)
belgium$PROVINCE <- "Belgium"
col_order <- c("DATE", "PROVINCE", "NEW_IN")
belgium <- belgium[, col_order]
dat <- rbind(dat, belgium)
# transform date and provinces
dat$DATE <- as.Date(dat$DATE)
str(dat$PROVINCE)
remove(list = ls())
# required packages
library(ggplot2)
library(ggrepel)
library(zoo)
library(lme4)
library(dplyr)
library(scales)
library(ggpubr)
library(grid)
library(gridExtra)
# import Sciensano hospitalisations data
dat <- read.csv("https://epistat.sciensano.be/Data/COVID19BE_HOSP.csv")
## Recoding dat$PROVINCE
dat$PROVINCE <- recode_factor(dat$PROVINCE,
"Brussels" = "BXL-BW-VB",
"VlaamsBrabant" = "BXL-BW-VB",
"BrabantWallon" = "BXL-BW-VB"
)
# aggregate new intakes by province and date
dat <- aggregate(NEW_IN ~ DATE + PROVINCE, dat, sum)
# add new intakes for Belgium as a whole
belgium <- aggregate(NEW_IN ~ DATE, dat, sum)
belgium$PROVINCE <- "Belgium"
col_order <- c("DATE", "PROVINCE", "NEW_IN")
belgium <- belgium[, col_order]
dat <- rbind(dat, belgium)
# transform date and provinces
dat$DATE <- as.Date(dat$DATE)
str(dat$PROVINCE)
levels(dat$PROVINCE)
dat$PROVINCE <- factor(dat$PROVINCE,
levels = c(
"BXL-BW-VB",
"Antwerpen",
"BXL-BW-VB",
"BXL-BW-VB",
"Hainaut",
"Liège",
"Limburg",
"Luxembourg",
"Namur",
"OostVlaanderen",
"BXL-BW-VB",
"WestVlaanderen",
"Belgium"
),
labels = c(
"BXL-BW-VB",
"Antwerpen",
"BXL-BW-VB",
"BXL-BW-VB",
"Hainaut",
"Liège",
"Limburg",
"Luxembourg",
"Namur",
"Oost-Vlaanderen",
"BXL-BW-VB",
"West-Vlaanderen",
"Belgique/België"
)
)
403599 + 1208542 + 1146175
# compute NEW_IN by population size
dat <- dat %>%
mutate(population = case_when(
PROVINCE == "Antwerpen" ~ 1857986,
PROVINCE == "BXL-BW-VB" ~ 2758316,
# PROVINCE == "Brussels" ~ 1208542,
PROVINCE == "Hainaut" ~ 1344241,
PROVINCE == "Liège" ~ 1106992,
PROVINCE == "Limburg" ~ 874048,
PROVINCE == "Luxembourg" ~ 284638,
PROVINCE == "Namur" ~ 494325,
PROVINCE == "Oost-Vlaanderen" ~ 1515064,
# PROVINCE == "Vlaams-Brabant" ~ 1146175,
PROVINCE == "West-Vlaanderen" ~ 1195796,
PROVINCE == "Belgique/België" ~ 11431406
)) %>%
mutate(NEW_IN_divid = NEW_IN / population * 100000)
# Create plot in dutch/fr
fig_trends <- ggplot(
subset(dat, DATE >= "2020-08-01"),
aes(x = DATE, y = NEW_IN_divid)
) +
geom_point(
size = 1L,
colour = "steelblue"
) +
labs(x = "", y = "Nombre d'hospitalisations (par 100,000 habitants) / Hospitalisaties (per 100,000 inwoners)") +
theme_minimal() +
facet_wrap(vars(PROVINCE),
scales = "free"
) +
geom_smooth(
se = FALSE,
col = "grey",
method = "gam",
formula = y ~ s(x)
) +
annotate("rect",
ymin = -Inf, ymax = Inf,
xmin = as.Date("2020-08-01"), xmax = as.Date("2020-09-01"),
alpha = .2
) +
annotate("rect",
ymin = -Inf, ymax = Inf,
xmin = as.Date("2020-09-01"), xmax = as.Date("2020-10-01"),
alpha = .05
) +
# annotate("rect",
#   ymin = -Inf, ymax = Inf,
#   xmin = as.Date("2020-05-01"), xmax = as.Date("2020-06-01"),
#   alpha = .2
# ) +
# annotate("rect",
#   ymin = -Inf, ymax = Inf,
#   xmin = as.Date("2020-06-01"), xmax = as.Date("2020-07-01"),
#   alpha = .05
# ) +
# annotate("rect",
#   ymin = -Inf, ymax = Inf,
#   xmin = as.Date("2020-07-01"), xmax = as.Date("2020-08-01"),
#   alpha = .2
# ) +
labs(
title = "Evolution des admissions hospitalières / Evolutie van de hospitalisaties - COVID-19"
) +
scale_y_continuous(breaks = seq(from = 0, to = 2.5, by = 1), limits = c(0, 2.5)) +
scale_x_date(labels = date_format("%d-%m"))
fig_trends
# Create plot in dutch/fr
fig_trends <- ggplot(
subset(dat, DATE >= "2020-08-01"),
aes(x = DATE, y = NEW_IN_divid)
) +
geom_point(
size = 1L,
colour = "steelblue"
) +
labs(x = "", y = "Nombre d'hospitalisations (par 100,000 habitants) / Hospitalisaties (per 100,000 inwoners)") +
theme_minimal() +
facet_wrap(vars(PROVINCE),
scales = "free"
) +
geom_smooth(
se = FALSE,
col = "grey",
method = "gam",
formula = y ~ s(x)
) +
annotate("rect",
ymin = -Inf, ymax = Inf,
xmin = as.Date("2020-08-01"), xmax = as.Date("2020-09-01"),
alpha = .2
) +
annotate("rect",
ymin = -Inf, ymax = Inf,
xmin = as.Date("2020-09-01"), xmax = as.Date("2020-10-01"),
alpha = .05
) +
# annotate("rect",
#   ymin = -Inf, ymax = Inf,
#   xmin = as.Date("2020-05-01"), xmax = as.Date("2020-06-01"),
#   alpha = .2
# ) +
# annotate("rect",
#   ymin = -Inf, ymax = Inf,
#   xmin = as.Date("2020-06-01"), xmax = as.Date("2020-07-01"),
#   alpha = .05
# ) +
# annotate("rect",
#   ymin = -Inf, ymax = Inf,
#   xmin = as.Date("2020-07-01"), xmax = as.Date("2020-08-01"),
#   alpha = .2
# ) +
labs(
title = "Evolution des admissions hospitalières / Evolutie van de hospitalisaties - COVID-19"
) +
scale_y_continuous(breaks = seq(from = 0, to = 1.5, by = 1), limits = c(0, 1.5)) +
scale_x_date(labels = date_format("%d-%m"))
fig_trends
## adjust caption at the end of the trend figure
caption <- grobTree(
textGrob(" * Lignes solides : courbes ajustées aux observations / Volle lijnen : gefitte curves \n * Lignes pointillées : phases de déconfinement 1a, 1b & 2 / Gestippelde lijnen: fases afbouw lockdown maatregelen 1a, 1b & 2",
x = 0, hjust = 0, vjust = 0,
gp = gpar(col = "darkgray", fontsize = 7, lineheight = 1.2)
),
textGrob("Niko Speybroeck (@NikoSpeybroeck), Antoine Soetewey (@statsandr) & Angel Rosas (@arosas_aguirre) \n Data: https://epistat.wiv-isp.be/covid/  ",
x = 1, hjust = 1, vjust = 0,
gp = gpar(col = "black", fontsize = 7.5, lineheight = 1.2)
),
cl = "ann"
)
